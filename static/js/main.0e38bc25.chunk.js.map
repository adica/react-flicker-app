{"version":3,"sources":["services/search-service.js","services/flicker-service.js","services/giphy-service.js","components/search/search.js","components/photos/photo.js","components/photos/photos.js","components/videos/video.js","components/videos/videos.js","app.js","serviceWorker.js","index.js"],"names":["searchForAssest","term","engine","apiUrl","flickerApi","concat","fetch","then","res","json","data","photos","photo","map","img","id","url","farm","server","secret","format","catch","err","console","log","flickerSearch","result","images","giphySearch","Search","_ref","searchValue","searchTermChanged","search","engineChanged","react_default","a","createElement","className","htmlFor","type","placeholder","value","onChange","onKeyPress","event","key","onClick","Photo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","placeholderUrl","state","visibility","handleChange","bind","assertThisInitialized","visible","setState","_this$props","onImageClick","react_intersection_observer_esm","rootMargin","href","style","backgroundImage","React","Component","Photos","photo_Photo","Video","e","video","onVideoClick","autoPlay","loop","muted","src","mp4","Videos","videos","video_Video","App","loading","searchEngineChanged","target","_this2","_this3","length","Fragment","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","error","ReactDOM","render","src_app","document","getElementById","URL","process","origin","addEventListener","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sVAGaA,EAAkB,SAACC,EAAMC,GAClC,MAAe,YAAXA,ECMqB,SAACD,GAE1B,IAAME,EAASC,gHAAA,WAAAC,OAZJ,mCAYI,UAAAA,OAEiBJ,GAEhC,OAAOK,MAAMH,GACRI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACF,OAAOA,EAAKC,OAAOC,MAAMC,IAAI,SAACC,GAAD,OAhB1B,SAACA,GACZ,MAAO,CACHC,GAAID,EAAG,GACPE,IAAG,SAAAX,OAAWS,EAAIG,KAAf,sBAAAZ,OAAwCS,EAAII,OAA5C,KAAAb,OAAsDS,EAAIC,GAA1D,KAAAV,OAAgES,EAAIK,OAApE,SAauCC,CAAON,OAEhDO,MAAM,SAACC,GAEJ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,IDlBJG,CAAcxB,GACJ,UAAXC,EEGa,SAACD,GACxB,IAAME,EAAM,GAAAE,OAVI,iCAUJ,aAAAA,OATI,mCASJ,OAAAA,OAA8CJ,GAE1D,OAAOK,MAAMH,GACRI,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAmB,GACF,OAAOA,EAAOhB,KAAKG,IAAI,SAACC,GAAD,OAZpB,SAACA,GACZ,MAAO,CACHC,GAAID,EAAIC,GACRC,IAAKF,EAAIa,OAAJ,cAS+BP,CAAON,OAE1CO,MAAM,SAACC,GAEJ,OADAC,QAAQC,IAAI,UAAWF,GAChBA,IFZJM,CAAY3B,QADhB,SGHI,SAAS4B,EAATC,GAAkF,IAAhEC,EAAgED,EAAhEC,YAAaC,EAAmDF,EAAnDE,kBAAmBC,EAAgCH,EAAhCG,OAAQ/B,EAAwB4B,EAAxB5B,OAAQgC,EAAgBJ,EAAhBI,cAC7E,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOE,QAAQ,gBAAf,kBACAJ,EAAAC,EAAAC,cAAA,SACItB,GAAG,eACHyB,KAAK,OACLC,YAAY,kCACZC,MAAOX,EACPY,SAAUX,EACVY,WAAY,SAAAC,GACU,UAAdA,EAAMC,KACNb,OAIZE,EAAAC,EAAAC,cAAA,UACIK,MAAOxC,EACPyC,SAAUT,GACVC,EAAAC,EAAAC,cAAA,UAAQK,MAAM,WAAd,WACAP,EAAAC,EAAAC,cAAA,UAAQK,MAAM,SAAd,UAEJP,EAAAC,EAAAC,cAAA,SAAOU,QAASd,EAAQO,KAAK,SAASE,MAAM,uBCrBnCM,oBACjB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACfE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,eAAiB,6CACtBP,EAAKQ,MAAQ,CACTC,YAAY,GAEhBT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KANLA,4EASNa,GAELA,GACAV,KAAKW,SAAS,CAAEL,WAAYI,qCAI3B,IAAAE,EAC2BZ,KAAKJ,MAA7BrC,EADHqD,EACGrD,MAAOsD,EADVD,EACUC,aACf,OACI/B,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUxB,SAAUU,KAAKO,aAAcQ,WAAW,2BAC9CjC,EAAAC,EAAAC,cAAA,KACIgC,KAAK,IACLtB,QAASmB,EACT5B,UAAU,oBACVvB,GAAIH,EAAMG,IAETsC,KAAKK,MAAMC,YACRxB,EAAAC,EAAAC,cAAA,UACIC,UAAU,cACVgC,MAAO,CACHC,gBAAe,OAAAlE,OAASO,EAAMI,IAAf,SAIzBqC,KAAKK,MAAMC,YACTxB,EAAAC,EAAAC,cAAA,UACIC,UAAU,cACVgC,MAAO,CAAEC,gBAAe,OAAAlE,OAASgD,KAAKI,eAAd,kBAvCrBe,IAAMC,kBCC1B,SAASC,EAAT5C,GAAgD,IAA9BU,EAA8BV,EAA9BU,KAAM7B,EAAwBmB,EAAxBnB,OAAQuD,EAAgBpC,EAAhBoC,aAC3C,OACI/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACV3B,EAAOE,IAAI,SAAAD,GAAK,OACbuB,EAAAC,EAAAC,cAACsC,EAAD,CACI7B,IAAKlC,EAAMG,GACXyB,KAAMA,EACN5B,MAAOA,EACPsD,aAAcA,WCTbU,cACjB,SAAAA,EAAY3B,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuB,IACf1B,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyB,GAAApB,KAAAH,KAAMJ,KACDS,MAAQ,CACTC,YAAY,GAEhBT,EAAKU,aAAeV,EAAKU,aAAaC,KAAlBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KALLA,4EAQN2B,GACTxB,KAAKW,SAAS,CAAEL,WAAYkB,qCAGvB,IAAAZ,EAC2BZ,KAAKJ,MAA7B6B,EADHb,EACGa,MAAOC,EADVd,EACUc,aACf,OACI5C,EAAAC,EAAAC,cAAA,eACIF,EAAAC,EAAAC,cAAC8B,EAAA,EAAD,CAAUxB,SAAUU,KAAKO,aAAcQ,WAAW,uBAC9CjC,EAAAC,EAAAC,cAAA,KACIgC,KAAK,IACLtB,QAASgC,EACTzC,UAAU,oBACVvB,GAAI+D,EAAM/D,IAEVoB,EAAAC,EAAAC,cAAA,SAAO2C,UAAQ,EAACC,MAAI,EAACC,OAAK,GACtB/C,EAAAC,EAAAC,cAAA,UAAQ8C,IAAKL,EAAM9D,IAAIoE,iBAzBhBZ,IAAMC,iBCA1B,SAASY,EAATvD,GAAgDA,EAA9BU,KAA8B,IAAxB8C,EAAwBxD,EAAxBwD,OAAQP,EAAgBjD,EAAhBiD,aAC3C,OACI5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACVgD,EAAOzE,IAAI,SAAAiE,GAAK,OACb3C,EAAAC,EAAAC,cAACkD,EAAD,CACIzC,IAAKgC,EAAM/D,GACX+D,MAAOA,EACPC,aAAcA,iBCkFnBS,cArFX,SAAAA,EAAYvC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmC,IACftC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqC,GAAAhC,KAAAH,KAAMJ,KACDS,MAAQ,CACT+B,SAAS,EACT1D,YAAa,MACb7B,OAAQ,UACRS,OAAQ,IAEZuC,EAAKjB,OAASiB,EAAKjB,OAAO4B,KAAZV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACdA,EAAKlB,kBAAoBkB,EAAKlB,kBAAkB6B,KAAvBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KACzBA,EAAKwC,oBAAsBxC,EAAKwC,oBAAoB7B,KAAzBV,OAAAW,EAAA,EAAAX,QAAAW,EAAA,EAAAX,CAAAD,KAVZA,mFAcfG,KAAKpB,mDAGS4C,GACdxB,KAAKW,SAAS,CAAEjC,YAAa8C,EAAEc,OAAOjD,oDAGtBmC,GAAG,IAAAe,EAAAvC,KACbX,EAAQmC,EAAEc,OAAOjD,MACvBW,KAAKW,SAAS,CACV9D,OAAQwC,GACT,kBAAMkD,EAAK3D,4CAGT,IAAA4D,EAAAxC,KACLA,KAAKW,SAAS,CAAEyB,SAAS,EAAM9D,OAAQ,KACvC3B,EAAgBqD,KAAKK,MAAM3B,YAAasB,KAAKK,MAAMxD,QAC9CK,KAAK,SAAAI,GACFkF,EAAK7B,SAAS,CAAErD,SAAQ8E,SAAS,MAEpCpE,MAAM,SAAAC,GAAG,OAAIuE,EAAK7B,SAAS,CAAErD,OAAQ,GAAI8E,SAAS,2CAG9CZ,GAETtD,QAAQC,IAAI,iBAAkBqD,EAAEc,OAAO5E,qCAIvC,OACIoB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACR,EAAD,CACII,OAAQoB,KAAKpB,OACb/B,OAAQmD,KAAKK,MAAMxD,OACnBgC,cAAemB,KAAKqC,oBACpB1D,kBAAmBqB,KAAKrB,kBACxBD,YAAasB,KAAKK,MAAM3B,cAG5BI,EAAAC,EAAAC,cAAA,WACKgB,KAAKK,MAAM+B,SACRtD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAf,cAG0B,IAA7Be,KAAKK,MAAM/C,OAAOmF,SAAiBzC,KAAKK,MAAM+B,SAC3CtD,EAAAC,EAAAC,cAAA,qDAGHgB,KAAKK,MAAM/C,OAAOmF,OAAS,IAAMzC,KAAKK,MAAM+B,SACzCtD,EAAAC,EAAAC,cAACF,EAAAC,EAAM2D,SAAP,KAC2B,YAAtB1C,KAAKK,MAAMxD,QACRiC,EAAAC,EAAAC,cAACqC,EAAD,CACI/D,OAAQ0C,KAAKK,MAAM/C,OACnBuD,aAAcb,KAAKa,eAGJ,UAAtBb,KAAKK,MAAMxD,QACRiC,EAAAC,EAAAC,cAACgD,EAAD,CACIC,OAAQjC,KAAKK,MAAM/C,OACnBoE,aAAc1B,KAAKa,yBA1ErCO,aCGZuB,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACThG,KAAK,SAAAqG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBpD,QACf+C,UAAUC,cAAcO,YAK1B1F,QAAQC,IAAI,6CAGRgF,EAAOU,UACTV,EAAOU,SAASN,KAMlBrF,QAAQC,IAAI,sCAGRgF,EAAOW,WACTX,EAAOW,UAAUP,SAO5BvF,MAAM,SAAA+F,GACL7F,QAAQ6F,MAAM,4CAA6CA,KCnFjEC,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe,SDc1C,SAAkBjB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIiB,IAAIC,qBAAwBzB,OAAOC,UAC3CyB,SAAW1B,OAAOC,SAASyB,OAIvC,OAGF1B,OAAO2B,iBAAiB,OAAQ,WAC9B,IAAMtB,EAAK,GAAAlG,OAAMsH,qBAAN,sBAEP3B,GA2DV,SAAiCO,EAAOC,GAEtClG,MAAMiG,GACHhG,KAAK,SAAAuH,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7CzB,UAAUC,cAAcyB,MAAM5H,KAAK,SAAAqG,GACjCA,EAAawB,aAAa7H,KAAK,WAC7B2F,OAAOC,SAASkC,aAKpB/B,EAAgBC,EAAOC,KAG1BnF,MAAM,WACLE,QAAQC,IACN,mEA/EA8G,CAAwB/B,EAAOC,GAI/BC,UAAUC,cAAcyB,MAAM5H,KAAK,WACjCgB,QAAQC,IACN,+GAMJ8E,EAAgBC,EAAOC,MCrC/BE","file":"static/js/main.0e38bc25.chunk.js","sourcesContent":["import { flickerSearch } from './flicker-service';\nimport { giphySearch } from './giphy-service';\n\nexport const searchForAssest = (term, engine) => {\n    if (engine === 'flicker') {\n        return flickerSearch(term);\n    } else if(engine === 'giphy') {\n        return giphySearch(term);\n    }\n};\n","const apiKey = 'e38f1bc56d9486ca37e84667b7a98ba8';\nconst flickerApi = 'https://api.flickr.com/services/rest';\n\nconst format = (img) => {\n    return {\n        id: img['id'],\n        url: `//farm${img.farm}.staticflickr.com/${img.server}/${img.id}_${img.secret}.jpg`\n    }\n};\n\nexport const flickerSearch = (term) => {\n\n    const apiUrl = flickerApi\n        + `?method=flickr.photos.search&sort=relevance&format=json&nojsoncallback=1&`\n        + `api_key=${apiKey}&text=${term}`;\n\n    return fetch(apiUrl)\n        .then(res => res.json())\n        .then(data => {\n            return data.photos.photo.map((img) => format(img));\n        })\n        .catch((err) => {\n            console.log('error: ', err);\n            return err;\n        });\n};\n","const giphyApiUrl = '//api.giphy.com/v1/gifs/search';\nconst giphyApiKey = 'YoyUyRGt2YenjFvxfq87V5gvNjak2EBQ';\n\nconst format = (img) => {\n    return {\n        id: img.id,\n        url: img.images['original_mp4']\n    }\n};\nexport const giphySearch = (term) => {\n    const apiUrl = `${giphyApiUrl}?api_key=${giphyApiKey}&q=${term}`;\n\n    return fetch(apiUrl)\n        .then(res => res.json())\n        .then(result => {\n            return result.data.map((img) => format(img));\n        })\n        .catch((err) => {\n            console.log('error: ', err);\n            return err;\n        });\n};\n","import React from 'react';\nimport './search.scss';\n\nexport default function Search({ searchValue, searchTermChanged, search, engine, engineChanged}) {\n    return (\n        <div className=\"search\">\n            <label htmlFor=\"search-input\">Search images:</label>\n            <input\n                id=\"search-input\"\n                type=\"text\"\n                placeholder=\"Enter search term (e.g. 'cats')\"\n                value={searchValue}\n                onChange={searchTermChanged}\n                onKeyPress={event => {\n                    if (event.key === 'Enter') {\n                        search()\n                    }\n                }}\n            />\n            <select\n                value={engine}\n                onChange={engineChanged} >\n                <option value=\"flicker\">Flicker</option>\n                <option value=\"giphy\">Gighy</option>\n            </select>\n            <input onClick={search} type=\"submit\" value=\"Search\" />\n        </div>\n    )\n}\n","import React from 'react';\nimport Observer from 'react-intersection-observer';\nimport './photo.scss';\n\nexport default class Photo extends React.Component {\n    constructor(props) {\n        super(props);\n        this.placeholderUrl = '//via.placeholder.com/350x350?text=loading';\n        this.state = {\n            visibility: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(visible) {\n        //replace placeholder with image when image enter viewport (with 100px margin)\n        if (visible) {\n            this.setState({ visibility: visible });\n        }\n    }\n\n    render() {\n        const { photo, onImageClick } = this.props;\n        return (\n            <article>\n                <Observer onChange={this.handleChange} rootMargin=\"100px 100px 100px 100px\">\n                    <a\n                        href=\"#\"\n                        onClick={onImageClick}\n                        className=\"photos-grid__link\"\n                        id={photo.id}\n                    >\n                        {this.state.visibility && (\n                            <figure\n                                className=\"absolute-bg\"\n                                style={{\n                                    backgroundImage: `url(${photo.url})`\n                                }}\n                            />\n                        )}\n                        {!this.state.visibility && (\n                            <figure\n                                className=\"absolute-bg\"\n                                style={{ backgroundImage: `url(${this.placeholderUrl})` }}\n                            />\n                        )}\n                    </a>\n                </Observer>\n\n            </article>\n\n        )\n    }\n}\n","import React from 'react';\nimport './photo';\nimport './photos.scss';\nimport Photo from './photo';\n\nexport default function Photos({ type, photos, onImageClick }) {\n    return (\n        <div className=\"photos-grid\">\n            {photos.map(photo => (\n                <Photo\n                    key={photo.id}\n                    type={type}\n                    photo={photo}\n                    onImageClick={onImageClick}\n                />\n            ))}\n        </div>\n    )\n}\n","import React from 'react';\nimport Observer from 'react-intersection-observer';\nimport '../photos/photo.scss';\n\nexport default class Video extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visibility: false\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    handleChange(e) {\n        this.setState({ visibility: e });\n    }\n\n    render() {\n        const { video, onVideoClick } = this.props;\n        return (\n            <article>\n                <Observer onChange={this.handleChange} rootMargin=\"50px 50px 50px 50px\">\n                    <a\n                        href=\"#\"\n                        onClick={onVideoClick}\n                        className=\"photos-grid__link\"\n                        id={video.id}\n                    >\n                        <video autoPlay loop muted>\n                            <source src={video.url.mp4} />\n                        </video>\n                    </a>\n                </Observer>\n\n            </article>\n\n        )\n    }\n}\n","import React from 'react';\nimport Video from './video';\nimport './videos.scss';\n\nexport default function Videos({ type, videos, onVideoClick }) {\n    return (\n        <div className=\"videos-grid\">\n            {videos.map(video => (\n                <Video\n                    key={video.id}\n                    video={video}\n                    onVideoClick={onVideoClick}\n                />\n            ))}\n        </div>\n    )\n}\n","import React, { Component } from 'react';\nimport { searchForAssest } from './services/search-service';\nimport Search from './components/search/search';\nimport Photos from './components/photos/photos';\nimport Videos from './components/videos/videos';\nimport './app.scss';\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true,\n            searchValue: 'car',\n            engine: 'flicker',\n            photos: []\n        };\n        this.search = this.search.bind(this);\n        this.searchTermChanged = this.searchTermChanged.bind(this);\n        this.searchEngineChanged = this.searchEngineChanged.bind(this);\n    }\n\n    componentDidMount() {\n        this.search();\n    }\n\n    searchTermChanged(e) {\n        this.setState({ searchValue: e.target.value });\n    }\n\n    searchEngineChanged(e) {\n        const value = e.target.value;\n        this.setState({\n            engine: value\n        }, () => this.search());\n    }\n\n    search() {\n        this.setState({ loading: true, images: [] });\n        searchForAssest(this.state.searchValue, this.state.engine)\n            .then(photos => {\n                this.setState({ photos, loading: false })\n            })\n            .catch(err => this.setState({ photos: [], loading: false }));\n    }\n\n    onImageClick(e) {\n        //todo\n        console.log('onImageClick: ', e.target.id);\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Search\n                    search={this.search}\n                    engine={this.state.engine}\n                    engineChanged={this.searchEngineChanged}\n                    searchTermChanged={this.searchTermChanged}\n                    searchValue={this.state.searchValue}\n                />\n\n                <div>\n                    {this.state.loading && (\n                        <div className=\"loading\">Loading...</div>\n                    )}\n\n                    {this.state.photos.length === 0 && !this.state.loading && (\n                        <div>Can't find photos for this search term</div>\n                    )}\n\n                    {this.state.photos.length > 0 && !this.state.loading && (\n                        <React.Fragment>\n                            {this.state.engine === 'flicker' && (\n                                <Photos\n                                    photos={this.state.photos}\n                                    onImageClick={this.onImageClick}\n                                />\n                            )}\n                            {this.state.engine === 'giphy' && (\n                                <Videos\n                                    videos={this.state.photos}\n                                    onVideoClick={this.onImageClick}\n                                />\n                            )}\n                        </React.Fragment>\n                    )}\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}